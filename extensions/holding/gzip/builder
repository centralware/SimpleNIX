#!/bin/sh

#########################
## APPLICATION DETAILS ##
################################################################################
# Contributor: Leonardo Arena <rnalrd@alpinelinux.org>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=gzip
pkgver=1.13
pkgrel=0
pkgdesc="Popular data compression program"
pkgfile="gzip-$pkgver.tar.xz"
pkgdir="gzip-$pkgver"
url="https://www.gnu.org/software/gzip/"
arch="all"
license="GPL-3.0-or-later"
depends="less"
checkdepends="diffutils grep perl"
source="https://ftp.gnu.org/gnu/gzip/gzip-$pkgver.tar.xz"
################################################################################

########################
# Extension Maintainer #
################################################################################
pkg_maintainer="CentralWare Development Centers"
pkg_maint_contact=""
################################################################################

get_source()
{
    if [ ! -f $CUR/src/${pkgfile} ]; then
        echo "Download SOURCE TARBALL from website"
        mkdir -p $CUR/src/raw; cd $CUR/src
        source=${source//\[pkgfile\]/$pkgfile}
        wget -q --no-check-certificate $source
    fi

    if [ ! -d $CUR/src/${pkgdir} ]; then
        cd $CUR/src
        tar -xf ${pkgfile}
        if [ ! -d $CUR/src/raw/${pkgdir} ]; then
            cp $CUR/src/${pkgdir} $CUR/src/raw/ -R
        fi
    fi
}

src_depends()
{
    echo "Loading compilation dependencies"
}

src_build()
{
    get_source
    [ ! -d $CUR/src/${pkgdir} ] && $(echo "${RED}ERROR! ${MAGENTA}Cannot find working source directory!"; exit 1)

    cd $CUR/src/${pkgdir}
    if [ ! -f ./.configured ]; then
        echo "${CYAN}Configuring...${NORMAL}"
        CPU=$(GetProcessorType)
        export DEFS="NO_ASM"
        ./configure \
            --build=$CBUILD \
            --host=$CHOST \
            --prefix=/usr/local \
            --mandir=/usr/local/share/man \
            --infodir=/usr/local/share/info > \
            $CUR/_configure.log 2>&1 || exit 1
        touch ./.configured
    fi
    echo "${CYAN}Compiling...${NORMAL}"
    make -j$(nproc) > $CUR/_compile.log 2>&1 || exit 1

    echo "${CYAN}Testing...${NORMAL}"
    make -j$(nproc) check > $CUR/_testing.log 2>&1 || exit 1

    echo "${CYAN}Preparing...${NORMAL}"
    make DESTDIR=$CUR/ext install > $CUR/_install.log 2>&1 || exit 1

    EXT=$CUR/ext
    rm -rf "$EXT"/usr/lib/charset.alias
    rmdir -p "$EXT"/usr/lib 2>/dev/null || true

    mkdir -p "$EXT"/bin
#    mv "$EXT"/usr/bin/gzip "$EXT"/usr/bin/gunzip "$EXT"/bin/
#    ln -s "$EXT"/bin/gzip "$EXT"/usr/bin/gzip
#    ln -s "$EXT"/bin/gunzip "$EXT"/usr/bin/gunzip

    # http://bugs.alpinelinux.org/issues/4011
#    ln -sf "$EWT"/bin/gunzip "$pkgdir"/usr/bin/uncompress
}



##>> SHARED FUNCTIONS (Update to shared location)
. ../functions

CPU=$(GetProcessorType)

clear
CUR=$(pwd)
ShowTitle
echo
echo "${WHITE}Extension ${GREEN}${pkgname}${NORMAL}"
echo

ExtClean
ExtLoadQuiet compiling less wget perl5

#get_source
src_build










#!/bin/sh

#########################
## APPLICATION DETAILS ##
################################################################################
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=apg
pkgver=2.2.3
pkgrel=7
pkgdesc="Automated Password Generator."
url="https://linux.die.net/man/1/apg" # Original homepage is dead
arch="all"
license="BSD-3-Clause"
pkgfile="${pkgname}-${pkgver}.tar.gz"
pkgdir="${pkgname}-${pkgver}"
source="https://launchpad.net/ubuntu/+archive/primary/+files/${pkgname}_$pkgver.orig.tar.gz -O ${pkgfile}"
################################################################################

########################
# Extension Maintainer #
################################################################################
pkg_maintainer="CentralWare Development Centers"
pkg_maint_contact=""
################################################################################

get_source()
{
    echo "Getting current version information..."
    [ "${pkgver}" == "" ] && get_version

    if [ ! -f $CUR/src/${pkgfile} ]; then
        echo "Download SOURCE TARBALL from website (${pkgver})"
        mkdir -p $CUR/src/raw; cd $CUR/src
        wget -q --no-check-certificate $source
    fi

    if [ ! -d $CUR/src/${pkgdir} ]; then
        cd $CUR/src
        tar -zxf ${pkgfile}
        if [ ! -d $CUR/src/raw/${pkgdir} ]; then
            cp $CUR/src/${pkgdir} $CUR/src/raw/ -R
        fi
    fi
}

src_depends()
{
    echo "Loading compilation dependencies"
}

src_build()
{
    get_source
    [ ! -d $CUR/src/${pkgdir} ] && $(echo "${RED}ERROR! ${MAGENTA}Cannot find working source directory!"; exit 1)

    cd $CUR/src/${pkgdir}
    [ -f $CUR/_compile.log ] && rm $CUR/_compile.log -f

    echo "${CYAN}Compiling...${NORMAL}"
    sed -i 's:^#\(CS_LIBS = -lnsl\)$:\1:' Makefile
    make -j$(nproc) > $CUR/_compile.log 2>&1 || exit 1

    echo "${CYAN}Preparing...${NORMAL}"
    mkdir -p $CUR/ext/usr/local/bin $CUR/ext/usr/local/share
    cp apg $CUR/ext/usr/local/bin/ >> $CUR/_compile.log 2>&1 || exit 1
    cp apgbfm $CUR/ext/usr/local/bin/ >> $CUR/_compile.log 2>&1 || exit 1
    cp doc/man $CUR/ext/usr/local/share/ -fR >> $CUR/_compile.log 2>&1 || exit 1
}



##>> SHARED FUNCTIONS (Update to shared location)
. ../functions

CPU=$(GetProcessorType)

clear
CUR=$(pwd)
ShowTitle
echo
echo "${WHITE}Extension ${GREEN}${pkgname}${NORMAL}"
echo

ExtClean
ExtLoadQuiet compiling wget

src_build








exit



package() {
	for i in apg apgbfm; do
		install -D -m755 $i "$pkgdir"/usr/bin/$i
		install -D -m644 doc/man/$i.1 "$pkgdir"/usr/share/man/man1/$i.1
	done
}

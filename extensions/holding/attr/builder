#!/bin/sh

#########################
## APPLICATION DETAILS ##
################################################################################
# Contributor: Leo <thinkabit.ukim@gmail.com>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=attr
pkgver=2.5.2
pkgrel=1
pkgdesc="utilities for managing filesystem extended attributes"
options="checkroot !check" # attr.test fails with no error message
url="https://savannah.nongnu.org/projects/attr"
arch="all"
license="LGPL-2.1-or-later"
checkdepends="perl"
subpackages="$pkgname-static $pkgname-dev $pkgname-doc lib$pkgname:libs"
source="https://download.savannah.nongnu.org/releases/attr/attr-$pkgver.tar.gz"
patches="attr-basename.patch"
pkgfile="attr-$pkgver.tar.gz"
pkgdir="attr-$pkgver"
################################################################################

########################
# Extension Maintainer #
################################################################################
pkg_maintainer="CentralWare Development Centers"
pkg_maint_contact=""
################################################################################

get_source()
{
    if [ ! -f $CUR/src/${pkgfile} ]; then
        echo "Download SOURCE TARBALL from website"
        mkdir -p $CUR/src/raw; cd $CUR/src
        wget -q --no-check-certificate $source
    fi

    if [ ! -d $CUR/src/${pkgdir} ]; then
        cd $CUR/src
        tar -xf ${pkgfile}
        if [ ! -d $CUR/src/raw/${pkgdir} ]; then
            cp $CUR/src/${pkgdir} $CUR/src/raw/ -R
        fi
    fi
}

src_patches()
{
    cd $CUR/src/${pkgdir}
    for PATCH in $patches
    do
        echo "${MAGENTA}Patching ${GREEN}${PATCH}${NORMAL}"
        patch -Np1 -i $CUR/_patches/${PATCH} || exit 1
    done
}

src_build()
{
    get_source
    [ ! -d $CUR/src/${pkgdir} ] && $(echo "${RED}ERROR! ${MAGENTA}Cannot find working source directory!"; exit 1)

    src_patches

    cd $CUR/src/${pkgdir}
    if [ ! -f ./.configured ]; then
        echo "${CYAN}Configuring...${NORMAL}"
        CPU=$(GetProcessorType)
        OPTIMIZER="$CFLAGS" \
        DEBUG=-DNDEBUG \
        INSTALL_USER=root \
        INSTALL_GROUP=root \
        ./configure \
            --prefix=/ \
            --exec-prefix=/ \
            --sbindir=/bin \
            --bindir=/usr/bin \
            --libdir=/lib \
            --libexecdir=/usr/lib \
            --includedir=/usr/include \
            --mandir=/usr/share/man \
            --docdir=/usr/share/doc/attr \
            --datadir=/usr/share \
            --disable-nls > \
            $CUR/_configure.log 2>&1 || exit 1
        touch ./.configured
    fi
    echo "${CYAN}Compiling...${NORMAL}"
    make -j$(nproc) > $CUR/_compile.log 2>&1 || exit 1

#    echo "${CYAN}Testing...${NORMAL}"
#    make -j$(nproc) test
#    make check > $CUR/_testing.log 2>&1 || exit 1

    echo "${CYAN}Preparing...${NORMAL}"
    make DESTDIR=$CUR/ext install > $CUR/_install.log 2>&1 || exit 1

#    mkdir -p "$pkgdir"/usr/lib
#    mv "$pkgdir"/lib/pkgconfig "$pkgdir"/usr/lib
}



##>> SHARED FUNCTIONS (Update to shared location)
. ../functions

CPU=$(GetProcessorType)

clear
CUR=$(pwd)
ShowTitle
echo
echo "${WHITE}Extension ${GREEN}${pkgname}${NORMAL}"
echo

ExtClean
ExtLoadQuiet compiling wget

src_build





#!/bin/sh
clear; CUR=$(pwd); OLD=$CUR; . ../functions; cpuType
SFX=$CPU; SXX=${SFX/x86_/x}; export CFLAGS CXXFLAGS LDFLAGS

extload quiet wget
cd $CUR; mkdir -p $CUR/bin $CUR/src

APP="coreutils"
###############
## coreutils ##
###############

#cd $CUR; echo "${CYAN}Package ${GREEN}${APP}${NORMAL}"
#echo -n "${CYAN}Loading support extensions:${NORMAL}"
extload compiletc texinfo

#VERSION=$(cat versions.lst | grep ":${APP}:" | awk -F: '{print $3}')
if [ ! -f $CUR/versions.lst ]; then
    echo "  ${YELLOW}Obtaining Current Version${NORMAL}"; mkdir -p $CUR/tmp; sudo rm $CUR/tmp -fR; mkdir -p $CUR/tmp; cd $CUR/tmp
    wget -q --no-check-certificate https://ftp.gnu.org/gnu/${APP} -O - | grep ${APP} | grep href | grep ".tar.gz" | awk -F "<a " '{print $2}' > index
    cat index | awk -F "</a" '{print $1}' | awk -F "\"" '{print $2}' > index2
    cat index2 | grep -v doc | grep -v alpha | grep -v beta | grep -v rc | grep -v ".sig" > index3
    cat index3 | awk -F "${APP}-" '{print $2}' | awk -F ".tar" '{print $1}' | grep -v "a" | grep -v "b" | grep -v "c" > index4
    sort index4 > index5
    cat index5 > $CUR/versions.lst
    cd $CUR
    sudo rm tmp -fR
fi

sudo ldconfig >/dev/null 2>&1

VERSION=$(tail -n 1 versions.lst)

if [ ! -d $CUR/src/${APP}-${VERSION} ]; then
    cd $CUR/src
    echo "  ${YELLOW}Obtaining Source Code ${GREEN}${VERSION}${NORMAL}"
    wget -q --no-check-certificate https://ftp.gnu.org/gnu/${APP}/${APP}-${VERSION}.tar.gz
    tar -zxf ${APP}-${VERSION}.tar.gz
    rm ${APP}-${VERSION}.tar.gz -f
fi

cd $CUR/src/${APP}-${VERSION}
[ ! -d build ] && mkdir build
cd build
if [ ! -f ./.configured ]; then
    echo "  ${YELLOW}Configuring Source Code ${NORMAL}"
    ../configure --prefix=/usr/local --enable-no-install-program=kill,uptime --libexecdir=/usr/local/lib >./.configured.log 2>&1 || exit 1
    find . -name Makefile -type f -exec sed -i 's/-g -O2//g' {} \;
    find . -name config.status -type f -exec sed -i 's/-g -O2//g' {} \;
    touch ./.configured
fi

if [ ! -f ./.compiled ]; then
    echo "  ${YELLOW}Compiling Source Code ${NORMAL}"
    [ -f ./.compiled.log ] && make clean >/dev/null 2>&1
    make -j$(nproc) >./.compiled.log 2>&1 || exit 1
    touch ./.compiled
fi

if [ ! -d $CUR/bin/${APP}-${VERSION} ]; then
    echo "  ${YELLOW}Installing Source Code ${NORMAL}"
    make DESTDIR=$CUR/bin/${APP}-${VERSION} install >./.installed.log 2>&1 || exit 1
fi















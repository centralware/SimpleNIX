#!/bin/sh
clear; CUR=$(pwd); OLD=$CUR; . ../functions
showapp "BC"

cpuType
SFX=${CPU}
SXX=${SFX/x86_/x}; export CFLAGS CXXFLAGS LDFLAGS

#echo -n "${CYAN}Loading support extensions:${NORMAL}"
#ExtClean
#ExtLoad wget; echo
extload quiet wget

cd $CUR; mkdir -p $CUR/bin $CUR/src
[ ! -f $CUR/versions.lst ] && touch $CUR/versions.lst


APP="bc"
##########
##  bc  ##
##########

cd $CUR; echo "${CYAN}Package ${GREEN}${APP}${NORMAL}"
#echo -n "${CYAN}Loading support extensions:${NORMAL}"
#ExtLoad compiletc
extload compiletc

VERSION=$(cat versions.lst | grep ":${APP}:" | awk -F: '{print $3}')
if [ "${VERSION}" == "" ]; then
    echo "  ${YELLOW}Obtaining Current Version${NORMAL}"
    echo > $CUR/versions.lst
    mkdir -p $CUR/tmp; sudo rm $CUR/tmp -fR; mkdir -p $CUR/tmp; cd $CUR/tmp
    wget -q --no-check-certificate https://github.com/gavinhoward/bc/releases -O - | grep "bc/tree" > index
    cat index | awk -F "bc/tree/" '{print $2}' | awk -F "\"" '{print $1}' > index2
    #for item in $(cat index2); do [ "${VERSION}" == "" ] && VERSION=$item; done
    #echo ":${APP}:${VERSION}" >> $CUR/versions.lst
    cat index2 > $CUR/versions.lst
    cd $CUR
    sudo rm tmp -fR
fi

sudo ldconfig >/dev/null 2>&1

VERSION=$(head -n 1 versions.lst)

if [ ! -d $CUR/src/${APP}-${VERSION} ]; then
    cd $CUR/src
    echo "  ${YELLOW}Obtaining Source Code ${GREEN}${VERSION}${NORMAL}"
    wget -q --no-check-certificate https://github.com/gavinhoward/bc/archive/refs/tags/${VERSION}.tar.gz
    tar -zxf ${VERSION}.tar.gz
    #rm ${VERSION}.tar.gz -f
fi

cd $CUR/src/${APP}-${VERSION}
if [ ! -f ./.configured ]; then
    echo "  ${YELLOW}Configuring source code${NORMAL}"
    CC="gcc -mtune=generic -Os -pipe" ./configure  --prefix=/usr/local -G -r > $CUR/.configure.log 2>&1  || exit 1
    touch ./.configured
fi

cd $CUR/src/${APP}-${VERSION}
if [ ! -f ./.compiled ]; then
    echo "  ${YELLOW}Compiling source code${NORMAL}"
    [ -f ./.compiled.log ] && make clean >/dev/null 2>&1
    make -j$(nproc) > $CUR/_compile.log 2>&1 || exit 1
    touch ./.compiled
fi

cd $CUR/src/${APP}-${VERSION}
rm $CUR/bin/${APP}-${VERSION} -fR 2>/dev/null
if [ ! -d $CUR/bin/${APP}-${VERSION} ]; then
    echo "  ${YELLOW}Installing compiled code${NORMAL}"
    sync; sync; sleep 1
    make DESTDIR=$CUR/bin/${APP}-${VERSION} install > $CUR/install.log 2>&1 || exit 1
fi





